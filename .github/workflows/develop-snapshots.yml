name: Develop Branch Snapshots

on:
  push:
    branches: [ dev ]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  validate-develop:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    timeout-minutes: 15
    outputs:
      snapshot-version: ${{ steps.version.outputs.snapshot-version }}

    steps:
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-develop-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-develop-
            ${{ runner.os }}-maven-

      - name: Verify snapshot version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [[ ! $VERSION =~ .*-SNAPSHOT$ ]]; then
            echo "‚ùå Error: Develop branch must have SNAPSHOT version, found: $VERSION"
            exit 1
          fi
          echo "‚úÖ Snapshot version verified: $VERSION"
          echo "snapshot-version=$VERSION" >> $GITHUB_OUTPUT

      - name: Run quick validation
        run: |
          mvn clean validate compile -B --no-transfer-progress \
            -DskipTests=true \
            -Dspotless.check.skip=true

  github-packages-snapshot:
    runs-on: ubuntu-latest
    needs: validate-develop
    timeout-minutes: 15
    if: github.ref == 'refs/heads/dev'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-develop-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-develop-
            ${{ runner.os }}-maven-

      - name: Run comprehensive tests
        run: |
          mvn clean verify -B --no-transfer-progress \
            -Dmaven.test.failure.ignore=false \
            -Dfailsafe.rerunFailingTestsCount=2

      - name: Configure Maven Settings for GitHub Packages
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          servers: |
            [
              {
                "id": "github",
                "username": "${env.GITHUB_ACTOR}",
                "password": "${env.GITHUB_TOKEN}"
              }
            ]

      - name: Deploy to GitHub Packages (Snapshots Only)
        run: |
          mvn deploy -B --no-transfer-progress \
            -Pgithub-packages-snapshot \
            -DskipTests=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify GitHub Packages deployment
        run: |
          VERSION="${{ needs.validate-develop.outputs.snapshot-version }}"
          echo "‚úÖ Snapshot deployed to GitHub Packages: $VERSION"
          echo "üì¶ Available at: https://github.com/logdash-io/java-sdk/packages"
          echo ""
          echo "üîç Maven dependency (requires GitHub authentication):"
          echo "<dependency>"
          echo "    <groupId>io.logdash</groupId>"
          echo "    <artifactId>logdash</artifactId>"
          echo "    <version>$VERSION</version>"
          echo "</dependency>"

      - name: Display deployment info
        run: |
          VERSION="${{ needs.validate-develop.outputs.snapshot-version }}"
          echo "üìã Snapshot Deployment Summary:"
          echo "‚úÖ Successfully deployed $VERSION to GitHub Packages (snapshots only)"
          echo "üî¢ Version: $VERSION"
          echo "üì¶ Repository: https://github.com/logdash-io/java-sdk/packages"
          echo ""
          echo "‚ö†Ô∏è Note: GitHub Packages requires authentication even for public repos"

  test-examples:
    runs-on: ubuntu-latest
    needs: [ validate-develop, github-packages-snapshot ]
    timeout-minutes: 20
    if: github.ref == 'refs/heads/dev'

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Configure Maven Settings for GitHub Packages
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          servers: |
            [
              {
                "id": "github",
                "username": "${env.GITHUB_ACTOR}",
                "password": "${env.GITHUB_TOKEN}"
              }
            ]

      - name: Test Simple Java Example with Snapshot
        run: |
          cd examples/example-simple-java
          mvn clean compile -B --no-transfer-progress \
            -Psnapshot-repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Spring Boot Example with Snapshot
        run: |
          cd examples/example-springboot
          mvn clean compile -B --no-transfer-progress \
            -Psnapshot-repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Check Deployed Package
        run: |
          cd check-deployed-package
          mvn clean compile -B --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notification:
    runs-on: ubuntu-latest
    needs: [ validate-develop, github-packages-snapshot, test-examples ]
    if: always() && github.ref == 'refs/heads/dev'

    steps:
      - name: Workflow status summary
        run: |
          VERSION="${{ needs.validate-develop.outputs.snapshot-version }}"
          
          echo "üìä Develop Branch Snapshot Workflow Summary"
          echo "============================================="
          echo "üî¢ Version: $VERSION"
          echo "üìÖ Triggered: ${{ github.event_name }}"
          echo ""
          echo "Job Results:"
          echo "‚úì Validation: ${{ needs.validate-develop.result }}"
          echo "‚úì GitHub Packages (Snapshots): ${{ needs.github-packages-snapshot.result }}"
          echo "‚úì Examples Testing: ${{ needs.test-examples.result }}"
          echo ""
          
          if [[ "${{ needs.validate-develop.result }}" == "success" && 
                "${{ needs.github-packages-snapshot.result }}" == "success" &&
                "${{ needs.test-examples.result }}" == "success" ]]; then
            echo "üéâ Snapshot deployment completed successfully!"
            echo "üì¶ $VERSION is now available for testing via GitHub Packages"
          else
            echo "‚ö†Ô∏è Snapshot deployment failed. Check individual job results above."
          fi
          
          echo ""
          echo "üîó Quick Access:"
          echo "- GitHub Packages: https://github.com/logdash-io/java-sdk/packages"
          echo "- Workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"